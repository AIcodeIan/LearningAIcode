Import numpy as np

Class NeuralNetwork:
  __init__(self, input_size, hidden_size, output_size)
  self.input_size = input_size
  self.hidden_size = hidden_size
  self_output_size = output_size

self.weights_input_hidden = np.random.rand(self.input.size, self.hidden_size)
self.weights_hidden_output = np.random.rand(self.hidden_size, self.output_size)

def feedforward(self, input_data)
    self.hidden_output = np.dot(input_data,self.weights_input_hidden)
    self.final_output = np.dot(self.hidden_output, self.weights_hidden_output)
return self.final_output

input_data = np.array([[0, 1], [1, 0], [1, 1], [0, 0]])
target_output = np.array([[1], [1], [0], [0]])

neural_network = NeuralNetwork(2, 3, 1)
predicted_output = neural_network.feedforward(input_data)

print(predicted_output)
